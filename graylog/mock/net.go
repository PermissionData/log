// Automatically generated by MockGen. DO NOT EDIT!
// Source: net (interfaces: Addr,PacketConn)

package mock_net

import (
	gomock "github.com/golang/mock/gomock"
	net "net"
	time "time"
)

// Mock of Addr interface
type MockAddr struct {
	ctrl     *gomock.Controller
	recorder *_MockAddrRecorder
}

// Recorder for MockAddr (not exported)
type _MockAddrRecorder struct {
	mock *MockAddr
}

func NewMockAddr(ctrl *gomock.Controller) *MockAddr {
	mock := &MockAddr{ctrl: ctrl}
	mock.recorder = &_MockAddrRecorder{mock}
	return mock
}

func (_m *MockAddr) EXPECT() *_MockAddrRecorder {
	return _m.recorder
}

func (_m *MockAddr) Network() string {
	ret := _m.ctrl.Call(_m, "Network")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockAddrRecorder) Network() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Network")
}

func (_m *MockAddr) String() string {
	ret := _m.ctrl.Call(_m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockAddrRecorder) String() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "String")
}

// Mock of PacketConn interface
type MockPacketConn struct {
	ctrl     *gomock.Controller
	recorder *_MockPacketConnRecorder
}

// Recorder for MockPacketConn (not exported)
type _MockPacketConnRecorder struct {
	mock *MockPacketConn
}

func NewMockPacketConn(ctrl *gomock.Controller) *MockPacketConn {
	mock := &MockPacketConn{ctrl: ctrl}
	mock.recorder = &_MockPacketConnRecorder{mock}
	return mock
}

func (_m *MockPacketConn) EXPECT() *_MockPacketConnRecorder {
	return _m.recorder
}

func (_m *MockPacketConn) Close() error {
	ret := _m.ctrl.Call(_m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPacketConnRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

func (_m *MockPacketConn) LocalAddr() net.Addr {
	ret := _m.ctrl.Call(_m, "LocalAddr")
	ret0, _ := ret[0].(net.Addr)
	return ret0
}

func (_mr *_MockPacketConnRecorder) LocalAddr() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "LocalAddr")
}

func (_m *MockPacketConn) ReadFrom(_param0 []byte) (int, net.Addr, error) {
	ret := _m.ctrl.Call(_m, "ReadFrom", _param0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(net.Addr)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockPacketConnRecorder) ReadFrom(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReadFrom", arg0)
}

func (_m *MockPacketConn) SetDeadline(_param0 time.Time) error {
	ret := _m.ctrl.Call(_m, "SetDeadline", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPacketConnRecorder) SetDeadline(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetDeadline", arg0)
}

func (_m *MockPacketConn) SetReadDeadline(_param0 time.Time) error {
	ret := _m.ctrl.Call(_m, "SetReadDeadline", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPacketConnRecorder) SetReadDeadline(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetReadDeadline", arg0)
}

func (_m *MockPacketConn) SetWriteDeadline(_param0 time.Time) error {
	ret := _m.ctrl.Call(_m, "SetWriteDeadline", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPacketConnRecorder) SetWriteDeadline(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetWriteDeadline", arg0)
}

func (_m *MockPacketConn) WriteTo(_param0 []byte, _param1 net.Addr) (int, error) {
	ret := _m.ctrl.Call(_m, "WriteTo", _param0, _param1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPacketConnRecorder) WriteTo(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteTo", arg0, arg1)
}
